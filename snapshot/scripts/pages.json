[{"name":"Bootstrap()","description":"com.rnett.future.testing.KotlinVersionKind.Bootstrap","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-version-kind/-bootstrap/index.html","searchKeys":["Bootstrap","Bootstrap()","com.rnett.future.testing.KotlinVersionKind.Bootstrap"]},{"name":"Eap()","description":"com.rnett.future.testing.KotlinVersionKind.Eap","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-version-kind/-eap/index.html","searchKeys":["Eap","Eap()","com.rnett.future.testing.KotlinVersionKind.Eap"]},{"name":"Unchanged()","description":"com.rnett.future.testing.KotlinVersionKind.Unchanged","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-version-kind/-unchanged/index.html","searchKeys":["Unchanged","Unchanged()","com.rnett.future.testing.KotlinVersionKind.Unchanged"]},{"name":"annotation class ExperimentalGithubWorkflowGeneration","description":"com.rnett.future.testing.github.ExperimentalGithubWorkflowGeneration","location":"-kotlin -future -testing/com.rnett.future.testing.github/-experimental-github-workflow-generation/index.html","searchKeys":["ExperimentalGithubWorkflowGeneration","annotation class ExperimentalGithubWorkflowGeneration","com.rnett.future.testing.github.ExperimentalGithubWorkflowGeneration"]},{"name":"class FilterContext","description":"com.rnett.future.testing.FilterContext","location":"-kotlin -future -testing/com.rnett.future.testing/-filter-context/index.html","searchKeys":["FilterContext","class FilterContext","com.rnett.future.testing.FilterContext"]},{"name":"class GithubWorkflowGenerator(jdk: String, runners: List<String>, scheduling: Scheduling?, baseDir: File, branch: String?, force: Boolean)","description":"com.rnett.future.testing.github.GithubWorkflowGenerator","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/index.html","searchKeys":["GithubWorkflowGenerator","class GithubWorkflowGenerator(jdk: String, runners: List<String>, scheduling: Scheduling?, baseDir: File, branch: String?, force: Boolean)","com.rnett.future.testing.github.GithubWorkflowGenerator"]},{"name":"class KotlinFutureTestingExtension","description":"com.rnett.future.testing.KotlinFutureTestingExtension","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/index.html","searchKeys":["KotlinFutureTestingExtension","class KotlinFutureTestingExtension","com.rnett.future.testing.KotlinFutureTestingExtension"]},{"name":"class KotlinFutureTestingPlugin : Plugin<Settings> ","description":"com.rnett.future.testing.KotlinFutureTestingPlugin","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-plugin/index.html","searchKeys":["KotlinFutureTestingPlugin","class KotlinFutureTestingPlugin : Plugin<Settings> ","com.rnett.future.testing.KotlinFutureTestingPlugin"]},{"name":"data class Daily(minute: Int, hour: Int) : Scheduling","description":"com.rnett.future.testing.github.Scheduling.Daily","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-daily/index.html","searchKeys":["Daily","data class Daily(minute: Int, hour: Int) : Scheduling","com.rnett.future.testing.github.Scheduling.Daily"]},{"name":"data class KotlinFutureTestingVersion(versionKind: KotlinVersionKind, version: String, originalVersion: String)","description":"com.rnett.future.testing.KotlinFutureTestingVersion","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/index.html","searchKeys":["KotlinFutureTestingVersion","data class KotlinFutureTestingVersion(versionKind: KotlinVersionKind, version: String, originalVersion: String)","com.rnett.future.testing.KotlinFutureTestingVersion"]},{"name":"data class Monthly(minute: Int, hour: Int, dayOfMonth: Int) : Scheduling","description":"com.rnett.future.testing.github.Scheduling.Monthly","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-monthly/index.html","searchKeys":["Monthly","data class Monthly(minute: Int, hour: Int, dayOfMonth: Int) : Scheduling","com.rnett.future.testing.github.Scheduling.Monthly"]},{"name":"data class Weekly(minute: Int, hour: Int, dayOfWeek: DayOfWeek) : Scheduling","description":"com.rnett.future.testing.github.Scheduling.Weekly","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-weekly/index.html","searchKeys":["Weekly","data class Weekly(minute: Int, hour: Int, dayOfWeek: DayOfWeek) : Scheduling","com.rnett.future.testing.github.Scheduling.Weekly"]},{"name":"enum KotlinVersionKind : Enum<KotlinVersionKind> ","description":"com.rnett.future.testing.KotlinVersionKind","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-version-kind/index.html","searchKeys":["KotlinVersionKind","enum KotlinVersionKind : Enum<KotlinVersionKind> ","com.rnett.future.testing.KotlinVersionKind"]},{"name":"fun <T> select(normal: T, future: T): T","description":"com.rnett.future.testing.KotlinFutureTestingVersion.select","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/select.html","searchKeys":["select","fun <T> select(normal: T, future: T): T","com.rnett.future.testing.KotlinFutureTestingVersion.select"]},{"name":"fun Daily(minute: Int = 0, hour: Int = 0)","description":"com.rnett.future.testing.github.Scheduling.Daily.Daily","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-daily/-daily.html","searchKeys":["Daily","fun Daily(minute: Int = 0, hour: Int = 0)","com.rnett.future.testing.github.Scheduling.Daily.Daily"]},{"name":"fun ExperimentalGithubWorkflowGeneration()","description":"com.rnett.future.testing.github.ExperimentalGithubWorkflowGeneration.ExperimentalGithubWorkflowGeneration","location":"-kotlin -future -testing/com.rnett.future.testing.github/-experimental-github-workflow-generation/-experimental-github-workflow-generation.html","searchKeys":["ExperimentalGithubWorkflowGeneration","fun ExperimentalGithubWorkflowGeneration()","com.rnett.future.testing.github.ExperimentalGithubWorkflowGeneration.ExperimentalGithubWorkflowGeneration"]},{"name":"fun GithubWorkflowGenerator(jdk: String, runners: List<String>, scheduling: Scheduling?, baseDir: File, branch: String?, force: Boolean)","description":"com.rnett.future.testing.github.GithubWorkflowGenerator.GithubWorkflowGenerator","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/-github-workflow-generator.html","searchKeys":["GithubWorkflowGenerator","fun GithubWorkflowGenerator(jdk: String, runners: List<String>, scheduling: Scheduling?, baseDir: File, branch: String?, force: Boolean)","com.rnett.future.testing.github.GithubWorkflowGenerator.GithubWorkflowGenerator"]},{"name":"fun KotlinFutureTestingPlugin()","description":"com.rnett.future.testing.KotlinFutureTestingPlugin.KotlinFutureTestingPlugin","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-plugin/-kotlin-future-testing-plugin.html","searchKeys":["KotlinFutureTestingPlugin","fun KotlinFutureTestingPlugin()","com.rnett.future.testing.KotlinFutureTestingPlugin.KotlinFutureTestingPlugin"]},{"name":"fun KotlinFutureTestingVersion(versionKind: KotlinVersionKind, version: String, originalVersion: String)","description":"com.rnett.future.testing.KotlinFutureTestingVersion.KotlinFutureTestingVersion","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/-kotlin-future-testing-version.html","searchKeys":["KotlinFutureTestingVersion","fun KotlinFutureTestingVersion(versionKind: KotlinVersionKind, version: String, originalVersion: String)","com.rnett.future.testing.KotlinFutureTestingVersion.KotlinFutureTestingVersion"]},{"name":"fun Monthly(minute: Int = 0, hour: Int = 0, dayOfMonth: Int = 1)","description":"com.rnett.future.testing.github.Scheduling.Monthly.Monthly","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-monthly/-monthly.html","searchKeys":["Monthly","fun Monthly(minute: Int = 0, hour: Int = 0, dayOfMonth: Int = 1)","com.rnett.future.testing.github.Scheduling.Monthly.Monthly"]},{"name":"fun Settings.kotlinFutureTesting(block: KotlinFutureTestingExtension.() -> Unit)","description":"com.rnett.future.testing.kotlinFutureTesting","location":"-kotlin -future -testing/com.rnett.future.testing/kotlin-future-testing.html","searchKeys":["kotlinFutureTesting","fun Settings.kotlinFutureTesting(block: KotlinFutureTestingExtension.() -> Unit)","com.rnett.future.testing.kotlinFutureTesting"]},{"name":"fun Weekly(minute: Int = 0, hour: Int = 0, dayOfWeek: DayOfWeek = DayOfWeek.SATURDAY)","description":"com.rnett.future.testing.github.Scheduling.Weekly.Weekly","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-weekly/-weekly.html","searchKeys":["Weekly","fun Weekly(minute: Int = 0, hour: Int = 0, dayOfWeek: DayOfWeek = DayOfWeek.SATURDAY)","com.rnett.future.testing.github.Scheduling.Weekly.Weekly"]},{"name":"fun bootstrap(gradleCommand: String = \"assemble\", suffix: String = \"compile\")","description":"com.rnett.future.testing.github.GithubWorkflowGenerator.bootstrap","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/bootstrap.html","searchKeys":["bootstrap","fun bootstrap(gradleCommand: String = \"assemble\", suffix: String = \"compile\")","com.rnett.future.testing.github.GithubWorkflowGenerator.bootstrap"]},{"name":"fun bootstrapCommands(vararg commands: String, suffix: String = \"compile\")","description":"com.rnett.future.testing.github.GithubWorkflowGenerator.bootstrapCommands","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/bootstrap-commands.html","searchKeys":["bootstrapCommands","fun bootstrapCommands(vararg commands: String, suffix: String = \"compile\")","com.rnett.future.testing.github.GithubWorkflowGenerator.bootstrapCommands"]},{"name":"fun bootstrapCustom(steps: String, suffix: String = \"compile\")","description":"com.rnett.future.testing.github.GithubWorkflowGenerator.bootstrapCustom","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/bootstrap-custom.html","searchKeys":["bootstrapCustom","fun bootstrapCustom(steps: String, suffix: String = \"compile\")","com.rnett.future.testing.github.GithubWorkflowGenerator.bootstrapCustom"]},{"name":"fun both(gradleCommand: String = \"assemble\", suffix: String = \"compile\")","description":"com.rnett.future.testing.github.GithubWorkflowGenerator.both","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/both.html","searchKeys":["both","fun both(gradleCommand: String = \"assemble\", suffix: String = \"compile\")","com.rnett.future.testing.github.GithubWorkflowGenerator.both"]},{"name":"fun bothCommands(vararg commands: String, suffix: String = \"compile\")","description":"com.rnett.future.testing.github.GithubWorkflowGenerator.bothCommands","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/both-commands.html","searchKeys":["bothCommands","fun bothCommands(vararg commands: String, suffix: String = \"compile\")","com.rnett.future.testing.github.GithubWorkflowGenerator.bothCommands"]},{"name":"fun bothCustom(steps: String, suffix: String = \"compile\")","description":"com.rnett.future.testing.github.GithubWorkflowGenerator.bothCustom","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/both-custom.html","searchKeys":["bothCustom","fun bothCustom(steps: String, suffix: String = \"compile\")","com.rnett.future.testing.github.GithubWorkflowGenerator.bothCustom"]},{"name":"fun commonCommands(vararg commands: String, name: String = \"Common Setup\", id: String? = null)","description":"com.rnett.future.testing.github.GithubWorkflowGenerator.commonCommands","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/common-commands.html","searchKeys":["commonCommands","fun commonCommands(vararg commands: String, name: String = \"Common Setup\", id: String? = null)","com.rnett.future.testing.github.GithubWorkflowGenerator.commonCommands"]},{"name":"fun commonStep(steps: String)","description":"com.rnett.future.testing.github.GithubWorkflowGenerator.commonStep","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/common-step.html","searchKeys":["commonStep","fun commonStep(steps: String)","com.rnett.future.testing.github.GithubWorkflowGenerator.commonStep"]},{"name":"fun eap(gradleCommand: String = \"assemble\", suffix: String = \"compile\")","description":"com.rnett.future.testing.github.GithubWorkflowGenerator.eap","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/eap.html","searchKeys":["eap","fun eap(gradleCommand: String = \"assemble\", suffix: String = \"compile\")","com.rnett.future.testing.github.GithubWorkflowGenerator.eap"]},{"name":"fun eapCommands(vararg commands: String, suffix: String = \"compile\")","description":"com.rnett.future.testing.github.GithubWorkflowGenerator.eapCommands","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/eap-commands.html","searchKeys":["eapCommands","fun eapCommands(vararg commands: String, suffix: String = \"compile\")","com.rnett.future.testing.github.GithubWorkflowGenerator.eapCommands"]},{"name":"fun eapCustom(steps: String, suffix: String = \"compile\")","description":"com.rnett.future.testing.github.GithubWorkflowGenerator.eapCustom","location":"-kotlin -future -testing/com.rnett.future.testing.github/-github-workflow-generator/eap-custom.html","searchKeys":["eapCustom","fun eapCustom(steps: String, suffix: String = \"compile\")","com.rnett.future.testing.github.GithubWorkflowGenerator.eapCustom"]},{"name":"fun filter(filter: VersionFilter)","description":"com.rnett.future.testing.KotlinFutureTestingExtension.filter","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/filter.html","searchKeys":["filter","fun filter(filter: VersionFilter)","com.rnett.future.testing.KotlinFutureTestingExtension.filter"]},{"name":"fun filterBootstrap(filter: VersionFilter)","description":"com.rnett.future.testing.KotlinFutureTestingExtension.filterBootstrap","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/filter-bootstrap.html","searchKeys":["filterBootstrap","fun filterBootstrap(filter: VersionFilter)","com.rnett.future.testing.KotlinFutureTestingExtension.filterBootstrap"]},{"name":"fun filterEap(filter: VersionFilter)","description":"com.rnett.future.testing.KotlinFutureTestingExtension.filterEap","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/filter-eap.html","searchKeys":["filterEap","fun filterEap(filter: VersionFilter)","com.rnett.future.testing.KotlinFutureTestingExtension.filterEap"]},{"name":"fun forceBootstrap(version: String = \"latest\")","description":"com.rnett.future.testing.KotlinFutureTestingExtension.forceBootstrap","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/force-bootstrap.html","searchKeys":["forceBootstrap","fun forceBootstrap(version: String = \"latest\")","com.rnett.future.testing.KotlinFutureTestingExtension.forceBootstrap"]},{"name":"fun forceEap(version: String = \"latest\")","description":"com.rnett.future.testing.KotlinFutureTestingExtension.forceEap","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/force-eap.html","searchKeys":["forceEap","fun forceEap(version: String = \"latest\")","com.rnett.future.testing.KotlinFutureTestingExtension.forceEap"]},{"name":"fun ifFuture(future: (version: String) -> String): String","description":"com.rnett.future.testing.KotlinFutureTestingVersion.ifFuture","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/if-future.html","searchKeys":["ifFuture","fun ifFuture(future: (version: String) -> String): String","com.rnett.future.testing.KotlinFutureTestingVersion.ifFuture"]},{"name":"fun ifFuture(future: String): String","description":"com.rnett.future.testing.KotlinFutureTestingVersion.ifFuture","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/if-future.html","searchKeys":["ifFuture","fun ifFuture(future: String): String","com.rnett.future.testing.KotlinFutureTestingVersion.ifFuture"]},{"name":"fun preferSameFeatureVersion()","description":"com.rnett.future.testing.KotlinFutureTestingExtension.preferSameFeatureVersion","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/prefer-same-feature-version.html","searchKeys":["preferSameFeatureVersion","fun preferSameFeatureVersion()","com.rnett.future.testing.KotlinFutureTestingExtension.preferSameFeatureVersion"]},{"name":"fun preferSameIncrementalVersion()","description":"com.rnett.future.testing.KotlinFutureTestingExtension.preferSameIncrementalVersion","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/prefer-same-incremental-version.html","searchKeys":["preferSameIncrementalVersion","fun preferSameIncrementalVersion()","com.rnett.future.testing.KotlinFutureTestingExtension.preferSameIncrementalVersion"]},{"name":"fun requireSameFeatureVersion()","description":"com.rnett.future.testing.KotlinFutureTestingExtension.requireSameFeatureVersion","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/require-same-feature-version.html","searchKeys":["requireSameFeatureVersion","fun requireSameFeatureVersion()","com.rnett.future.testing.KotlinFutureTestingExtension.requireSameFeatureVersion"]},{"name":"fun requireSameIncrementalVersion()","description":"com.rnett.future.testing.KotlinFutureTestingExtension.requireSameIncrementalVersion","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/require-same-incremental-version.html","searchKeys":["requireSameIncrementalVersion","fun requireSameIncrementalVersion()","com.rnett.future.testing.KotlinFutureTestingExtension.requireSameIncrementalVersion"]},{"name":"infix fun <T> select(pair: Pair<T, T>): T","description":"com.rnett.future.testing.KotlinFutureTestingVersion.select","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/select.html","searchKeys":["select","infix fun <T> select(pair: Pair<T, T>): T","com.rnett.future.testing.KotlinFutureTestingVersion.select"]},{"name":"inline fun <T> select(normal: T, future: (version: String) -> T): T","description":"com.rnett.future.testing.KotlinFutureTestingVersion.select","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/select.html","searchKeys":["select","inline fun <T> select(normal: T, future: (version: String) -> T): T","com.rnett.future.testing.KotlinFutureTestingVersion.select"]},{"name":"inline fun generateGithubWorkflows(jdk: String = \"15\", runners: List<String> = listOf(\"ubuntu-latest\"), scheduling: Scheduling? = Scheduling.Weekly(), baseDir: File = rootProjectDir, branch: String? = null, force: Boolean = false, block: GithubWorkflowGenerator.() -> Unit)","description":"com.rnett.future.testing.KotlinFutureTestingExtension.generateGithubWorkflows","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/generate-github-workflows.html","searchKeys":["generateGithubWorkflows","inline fun generateGithubWorkflows(jdk: String = \"15\", runners: List<String> = listOf(\"ubuntu-latest\"), scheduling: Scheduling? = Scheduling.Weekly(), baseDir: File = rootProjectDir, branch: String? = null, force: Boolean = false, block: GithubWorkflowGenerator.() -> Unit)","com.rnett.future.testing.KotlinFutureTestingExtension.generateGithubWorkflows"]},{"name":"inline operator fun <T> invoke(normal: T, future: (version: String) -> T): T","description":"com.rnett.future.testing.KotlinFutureTestingVersion.invoke","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/invoke.html","searchKeys":["invoke","inline operator fun <T> invoke(normal: T, future: (version: String) -> T): T","com.rnett.future.testing.KotlinFutureTestingVersion.invoke"]},{"name":"open override fun apply(settings: Settings)","description":"com.rnett.future.testing.KotlinFutureTestingPlugin.apply","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-plugin/apply.html","searchKeys":["apply","open override fun apply(settings: Settings)","com.rnett.future.testing.KotlinFutureTestingPlugin.apply"]},{"name":"operator fun <T> invoke(normal: T, future: T): T","description":"com.rnett.future.testing.KotlinFutureTestingVersion.invoke","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/invoke.html","searchKeys":["invoke","operator fun <T> invoke(normal: T, future: T): T","com.rnett.future.testing.KotlinFutureTestingVersion.invoke"]},{"name":"operator fun <T> invoke(pair: Pair<T, T>): T","description":"com.rnett.future.testing.KotlinFutureTestingVersion.invoke","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/invoke.html","searchKeys":["invoke","operator fun <T> invoke(pair: Pair<T, T>): T","com.rnett.future.testing.KotlinFutureTestingVersion.invoke"]},{"name":"sealed class Scheduling","description":"com.rnett.future.testing.github.Scheduling","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/index.html","searchKeys":["Scheduling","sealed class Scheduling","com.rnett.future.testing.github.Scheduling"]},{"name":"val Project.kotlinFutureVersion: KotlinFutureTestingVersion","description":"com.rnett.future.testing.kotlinFutureVersion","location":"-kotlin -future -testing/com.rnett.future.testing/kotlin-future-version.html","searchKeys":["kotlinFutureVersion","val Project.kotlinFutureVersion: KotlinFutureTestingVersion","com.rnett.future.testing.kotlinFutureVersion"]},{"name":"val Settings.kotlinFutureTesting: KotlinFutureTestingExtension","description":"com.rnett.future.testing.kotlinFutureTesting","location":"-kotlin -future -testing/com.rnett.future.testing/kotlin-future-testing.html","searchKeys":["kotlinFutureTesting","val Settings.kotlinFutureTesting: KotlinFutureTestingExtension","com.rnett.future.testing.kotlinFutureTesting"]},{"name":"val cron: String","description":"com.rnett.future.testing.github.Scheduling.cron","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/cron.html","searchKeys":["cron","val cron: String","com.rnett.future.testing.github.Scheduling.cron"]},{"name":"val dayOfMonth: Int = 1","description":"com.rnett.future.testing.github.Scheduling.Monthly.dayOfMonth","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-monthly/day-of-month.html","searchKeys":["dayOfMonth","val dayOfMonth: Int = 1","com.rnett.future.testing.github.Scheduling.Monthly.dayOfMonth"]},{"name":"val dayOfWeek: DayOfWeek","description":"com.rnett.future.testing.github.Scheduling.Weekly.dayOfWeek","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-weekly/day-of-week.html","searchKeys":["dayOfWeek","val dayOfWeek: DayOfWeek","com.rnett.future.testing.github.Scheduling.Weekly.dayOfWeek"]},{"name":"val hour: Int = 0","description":"com.rnett.future.testing.github.Scheduling.Daily.hour","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-daily/hour.html","searchKeys":["hour","val hour: Int = 0","com.rnett.future.testing.github.Scheduling.Daily.hour"]},{"name":"val hour: Int = 0","description":"com.rnett.future.testing.github.Scheduling.Monthly.hour","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-monthly/hour.html","searchKeys":["hour","val hour: Int = 0","com.rnett.future.testing.github.Scheduling.Monthly.hour"]},{"name":"val hour: Int = 0","description":"com.rnett.future.testing.github.Scheduling.Weekly.hour","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-weekly/hour.html","searchKeys":["hour","val hour: Int = 0","com.rnett.future.testing.github.Scheduling.Weekly.hour"]},{"name":"val isBootstrap: Boolean","description":"com.rnett.future.testing.KotlinFutureTestingVersion.isBootstrap","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/is-bootstrap.html","searchKeys":["isBootstrap","val isBootstrap: Boolean","com.rnett.future.testing.KotlinFutureTestingVersion.isBootstrap"]},{"name":"val isEap: Boolean","description":"com.rnett.future.testing.KotlinFutureTestingVersion.isEap","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/is-eap.html","searchKeys":["isEap","val isEap: Boolean","com.rnett.future.testing.KotlinFutureTestingVersion.isEap"]},{"name":"val isFuture: Boolean","description":"com.rnett.future.testing.KotlinFutureTestingVersion.isFuture","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/is-future.html","searchKeys":["isFuture","val isFuture: Boolean","com.rnett.future.testing.KotlinFutureTestingVersion.isFuture"]},{"name":"val isUnchanged: Boolean","description":"com.rnett.future.testing.KotlinFutureTestingVersion.isUnchanged","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/is-unchanged.html","searchKeys":["isUnchanged","val isUnchanged: Boolean","com.rnett.future.testing.KotlinFutureTestingVersion.isUnchanged"]},{"name":"val minute: Int = 0","description":"com.rnett.future.testing.github.Scheduling.Daily.minute","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-daily/minute.html","searchKeys":["minute","val minute: Int = 0","com.rnett.future.testing.github.Scheduling.Daily.minute"]},{"name":"val minute: Int = 0","description":"com.rnett.future.testing.github.Scheduling.Monthly.minute","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-monthly/minute.html","searchKeys":["minute","val minute: Int = 0","com.rnett.future.testing.github.Scheduling.Monthly.minute"]},{"name":"val minute: Int = 0","description":"com.rnett.future.testing.github.Scheduling.Weekly.minute","location":"-kotlin -future -testing/com.rnett.future.testing.github/-scheduling/-weekly/minute.html","searchKeys":["minute","val minute: Int = 0","com.rnett.future.testing.github.Scheduling.Weekly.minute"]},{"name":"val originalVersion: String","description":"com.rnett.future.testing.FilterContext.originalVersion","location":"-kotlin -future -testing/com.rnett.future.testing/-filter-context/original-version.html","searchKeys":["originalVersion","val originalVersion: String","com.rnett.future.testing.FilterContext.originalVersion"]},{"name":"val originalVersion: String","description":"com.rnett.future.testing.KotlinFutureTestingVersion.originalVersion","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/original-version.html","searchKeys":["originalVersion","val originalVersion: String","com.rnett.future.testing.KotlinFutureTestingVersion.originalVersion"]},{"name":"val version: String","description":"com.rnett.future.testing.KotlinFutureTestingVersion.version","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/version.html","searchKeys":["version","val version: String","com.rnett.future.testing.KotlinFutureTestingVersion.version"]},{"name":"val versionKind: KotlinVersionKind","description":"com.rnett.future.testing.KotlinFutureTestingVersion.versionKind","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-version/version-kind.html","searchKeys":["versionKind","val versionKind: KotlinVersionKind","com.rnett.future.testing.KotlinFutureTestingVersion.versionKind"]},{"name":"var disabled: Boolean = false","description":"com.rnett.future.testing.KotlinFutureTestingExtension.disabled","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/disabled.html","searchKeys":["disabled","var disabled: Boolean = false","com.rnett.future.testing.KotlinFutureTestingExtension.disabled"]},{"name":"var substituteDependencies: Boolean = true","description":"com.rnett.future.testing.KotlinFutureTestingExtension.substituteDependencies","location":"-kotlin -future -testing/com.rnett.future.testing/-kotlin-future-testing-extension/substitute-dependencies.html","searchKeys":["substituteDependencies","var substituteDependencies: Boolean = true","com.rnett.future.testing.KotlinFutureTestingExtension.substituteDependencies"]}]
